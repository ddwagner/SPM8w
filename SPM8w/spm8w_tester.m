function spm8w_tester(varargin)
% ==============================================================================
% SPM8w r5236
% Script driven batching for SPM8 with additional tools and support for 
% other commonly used analyses (roi, ppi, mixed).
% 
% Heatherton & Kelley Labs
% Last update: February 2013 - DDW
% Created: February 2013 - DDW
% ==============================================================================
% spm8w_tester(tests, subjects)
% 
% spm8w_tester requires the example dataset (2013_H8TJAZZ_SPM8_r5236).
%
% spm8w_tester can be called without arguments and it will ask for subjects 
% (select all three) and will proceed to test major aspects of the example 
% dataset (GLM, ROI, VOI, PPI, DARTEL). 
%
% spm8w_tester can also be called with tests ('all' or 1, 2, 3 , etc.) and with
% a cell array of subject IDs.
%
% Tests are: 
% 1=Preprocessing(F)
% 2=Preprocessing/Segmentation(A)
% 3=DARTEL normalization
% 4=GLM computation 
% 5=Compute contrasts
% 6=Random effects
% 7=ROI analysis
% 8=VOI analysis
% 9=PPI regressor creation
% 10=Reset to RAW (deletes everything generated by tester)
%
% spm8w_tester must be run from the example dataset root directory...
% =======1=========2=========3=========4=========5=========6=========7=========8

%---Get subjects 
switch nargin
    case 0
    	tests    = 'all';
        subjects = spm8w_getsub;
    case 1
        tests    = varargin{1};
        needsub  = [1:5,8,9];
        if sum(ismember(tests,needsub)) > 0
            subjects = spm8w_getsub;    
        else
            subjects = [];
        end        
    case 2
        tests    = varargin{1};
        subjects = varargin{2};
    otherwise
        error('You''ve specified too many inputs. Either 1 or 2 only please.');
end

%---Set tests
%-Tests are: 
%-1=Preprocessing(F)
%-2=Preprocessing/Segmentation(A)
%-3=DARTEL normalization
%-4=GLM computation 
%-5=Compute contrasts
%-6=Random effects
%-7=ROI analysis
%-8=VOI analysis
%-9=PPI regressor creation
%-10=Reset to RAW (deletes everything generated by tester)
if strcmpi(tests,'all')
    tests = [1,2,3,4,5,6,7,8,9];
end

%--Check for missing MRIs
if ~isempty(subjects)
    for i = 1:length(subjects)
        if ~exist(fullfile('SUBJECTS',subjects{i},'NIFTI','mprage.nii.gz'))
            copyfile(['SUBJECTS/RAW/',subjects{i},'_mprage/mprage.nii.gz'],...
                    ['SUBJECTS/',subjects{i},'/NIFTI']);
        end
    end
end

%---Run tests
tests_start = datestr(now);
fprintf('==========Beginning example dataset tests on %d subjects\n', length(subjects)); 
for itest = 1:length(tests)
    switch tests(itest)          
        case 1 %PREPROC
            %--Preprocessing - FUNCTIONAL using P_H8TJAZZ.m
            %--We only need to preprocess functional dataset once for all GLMs
            %--and also for DARTEL. DARTEL will pick up after basic prepro is
            %--complete.
            for i = 1:length(subjects)
                spm8w_preprocess(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ.m'));
            end
            
        case 2 %SEG8
            %--Preprocessing/Segmentation - ANATOMICAL using P_H8TJAZZ_DARTEL.m
            for i = 1:length(subjects)
                spm8w_seg8(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_DARTEL.m'));     
            end
     
        case 3 %DARTEL
            %--DARTEL template creation and normalization
            %-Create template
            spm8w_dartel('template',subjects,fullfile('SCRIPTS','P_H8TJAZZ_DARTEL.m'));
            for i = 1:length(subjects)
                %-Anatomical to MNI
                spm8w_dartel('mprage2mni',subjects,fullfile('SCRIPTS','P_H8TJAZZ_DARTEL.m'));
                %-EPI to MNI
                spm8w_dartel('epi2mni',subjects,fullfile('SCRIPTS','P_H8TJAZZ_DARTEL.m'));
            end
        case 4 %GLM
            %-GLM computation for multiple design types
            for i = 1:length(subjects)
                spm8w_compute(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ.m'));
                spm8w_compute(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_RT.m'));
                spm8w_compute(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_BLOCK.m'));
                spm8w_compute(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_MIXED.m'));
                spm8w_compute(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_PARA.m'));
                spm8w_compute(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_DARTEL.m'));    
            end

        case 5 %CON
            %-Contrast calcualtion based on CON files for multiple design types
            for i = 1:length(subjects)
                spm8w_contrasts(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ.m'));
                spm8w_contrasts(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_RT.m'));
                spm8w_contrasts(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_BLOCK.m'));
                spm8w_contrasts(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_MIXED.m'));
                spm8w_contrasts(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_PARA.m')); 
                spm8w_contrasts(subjects{i},fullfile('SCRIPTS','P_H8TJAZZ_DARTEL.m')); 
            end  
            
        case 6 %RFX
            %-One-sample t-test (random effects analysis) for multiple contrasts
            %-and GLM designs.
            spm8w_rfx(fullfile('RFX','RFX_H8TJAZZ'));
            spm8w_rfx(fullfile('RFX','RFX_H8TJAZZ_RT'));
            spm8w_rfx(fullfile('RFX','RFX_H8TJAZZ_BLOCK'));
            spm8w_rfx(fullfile('RFX','RFX_H8TJAZZ_MIXED'));
            spm8w_rfx(fullfile('RFX','RFX_H8TJAZZ_PARA'));   
            spm8w_rfx(fullfile('RFX','RFX_H8TJAZZ_DARTEL'));  
            
        case 7 %ROI
            %-ROI parameter estimate extraction and analysis
            spm8w_roitool(fullfile('SCRIPTS','ROI_H8TJAZZ.m'));
        
        case 8 %VOI
            %-VOI timeseries extraction
            spm8w_voitool('VOI', subjects, fullfile('SCRIPTS','VOI_H8TJAZZ.m'));
        
        case 9 %PPI
            %-PPI regressor creation
            spm8w_voitool('PPI', subjects, fullfile('SCRIPTS','VOI_H8TJAZZ.m'));
            
        case 10 %Reset the universe
            %-Delete root dirs
            fprintf('Reseting example data back to raw...\n');
            try rmdir('./SNR_bold','s'); end
            try rmdir('./ROI/H8TJAZZ','s'); end
            try rmdir('./RFX','s'); end
            try rmdir('./SNR_BOLD','s'); end
            try rmdir('./ONSETS/PPI','s'); end
            try rmdir('./SUBJECTS/01feb13aa','s'); end
            try rmdir('./SUBJECTS/01feb13bb','s'); end
            try rmdir('./SUBJECTS/02feb13cc','s'); end
            try rmdir('./SUBJECTS/DARTEL_TEMPLATE','s'); end
            try delete('./*.*'); end
    end
end

%---What time is it?
tests_stop                = datestr(now);
tests_time_elapsed        = etime(datevec(tests_stop),datevec(tests_start)); %time elapsed in seconds
[hours, minutes, seconds] = spm8w_timecalc(tests_time_elapsed);
fprintf('SPM8w example dataset testing complete computation finished at %s\n and took %d hours, %d minutes and %d seconds...\n',tests_stop,hours,minutes,seconds);
